import org.openhab.core.library.items.*
import org.openhab.core.library.types.*
import org.openhab.core.persistence.*
import org.openhab.model.script.actions.*

var Timer timer

rule "NO Motion Detected"
	when
		Item Ms_Motion changed from OPEN to CLOSED
	then
		sendCommand(Light_Switch, OFF)
end

rule "Motion Detected"
	when
		Item Ms_Motion changed from CLOSED to OPEN
	then
		sendCommand(Light_Switch, ON)
end

rule "Meter On"
	when
		Item Meter_Switch changed from OFF to ON
	then
		sendCommand(Meter_Push, ON)
end

rule "Meter OFF"
	when
		Item Meter_Switch changed from ON to OFF
	then
		sendCommand(Meter_Push, OFF)
		print("---------------")
end

rule "Combine Two Actions"
	when
		  Item Ms_Motion changed to CLOSED
	then
	 if(Meter_Power.state > 1 ) {
            timer = createTimer(now.plusSeconds(10)) [|
               if(Meter_Power.state > 1 ){
				playSound("doorbell.mp3")
				}
            ]
        } else {
            if(timer!=null) {
                timer.cancel
                timer = null
            }
        }
end
/*
  Triggers
  *{
  	Item <item> received command [<command>]
  	Item <item> received update [<state>]
  	Item <item> changed [from <state>] [to <state>]

  	Time is midnight
  	Time is noon
  	Time cron "<cron expression>"

  	System started
  	System shuts down
  }

  Actions
  *{
  	Event bus related actions
  		sendCommand(String itemName, String commandString)
  		postUpdate(String itemName, String stateString)

  	Audio actions
  		setMasterVolume(float volume)
  		playSound(String filename)
  		playStream(String url)

  	Other Actions
  		sendHttpGetRequest(String url)
  		callScript(String scriptName)
  		createTimer(AbstractInstant instant,[| Procedure procedure])
  		executeCommandLine(String commandLine[, int timeout])
   }
 */
